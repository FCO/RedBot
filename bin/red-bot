use v6.d;
use Red <red-do>;
use RedBot;
use RedBot::Server;

#!/usr/bin/env perl6

use Whateverable;
use Whateverable::Bits;
use Whateverable::Output;
use Whateverable::Processing;

class Redable does Whateverable {

    method help($msg) {
        “Like this {$msg.server.current-nick}: <some Red code>”;
    }

    red-defaults default => database("SQLite", :database<.connection.db>);
}

my $*RED-DEBUG = so %*ENV<RED_DEBUG>;
my %*SUB-MAIN-OPTS =
  :named-anywhere,
;

multi MAIN("run") {
    use IRC::Client;
    my %*BOT-ENV;

    #Redable.new.selfrun: ‘redable’, [ / redable <before ‘:’> /, fuzzy-nick(‘redable’, 2) ];
    .run with IRC::Client.new:
        :debug
        :nick(RedBot::Server.^all.map(*.nicks).Seq.flatmap: *.split: " ")
        :alias<red>
        :plugins(Redable.new.self)
        :servers(%( |RedBot::Server.^all>>.Hash ))
}

multi MAIN("list-servers") {
    say %( |RedBot::Server.^all>>.Hash )
}

multi MAIN("create-connection-db") {
    RedBot::Server.^create-table
}

multi MAIN("add-server", Str $name, Str :$host!, Str :$nicks!, Str :$channels!, Str :$alias!) {
    RedBot::Server.^create:
        :$name,
        |(:host($_) with $host),
        |(:nicks($_) with $nicks),
        |(:alias($_) with $alias),
        |(:channels($_) with $channels),
}
